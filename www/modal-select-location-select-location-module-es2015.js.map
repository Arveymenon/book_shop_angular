{"version":3,"sources":["./src/app/services/http/http.service.ts","./src/app/services/loading/loading.service.ts"],"names":[],"mappings":"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","file":"modal-select-location-select-location-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Http, Headers, RequestOptions } from '@angular/http'; \nimport { map } from 'rxjs/operators';\nimport { environment } from './../../../environments/environment'\n// import { HTTP, HTTPResponse } from '@ionic-native/http/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  public url = 'http://arvey-book-shop.herokuapp.com/';\n  public assets_url = 'https://raw.githubusercontent.com/Arveymenon/book_shop_angular/master/src/assets/';\n  \n  constructor(public http: HttpClient) {\n    if(environment.production){\n      this.url = \"http://arvey-book-shop.herokuapp.com/\"\n      this.assets_url = 'https://raw.githubusercontent.com/Arveymenon/book_shop_angular/master/src/assets/';\n    }else {\n      this.url = \"http://localhost:8000/\"\n      this.assets_url = 'http://localhost:8000/';\n    }\n\n  }\n\n  call(method, apiEndPoint, body?: any) {\n    console.log(apiEndPoint);\n    // const url = 'https://schooby.us-east-2.elasticbeanstalk.com/' + apiEndPoint;\n    // const url = 'http://192.168.1.192:8000/book_shop_backend/' + apiEndPoint;\n    const url = this.url + apiEndPoint;\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    });\n    return new Promise((resolve, reject) => {\n\n      switch(method) {\n        case 'get': {\n          console.log(url)\n          this.http.get(url, { headers })\n          .subscribe((data) => {\n            resolve(data);\n          },\n          (error) => {\n            reject(error);\n          },\n        );\n          break;\n        }\n        case 'post': {\n          this.http.post(url, body, { headers })\n          .subscribe((data) => {\n            resolve(data);\n          },\n          (error) => {\n            reject(error);\n            },\n          );\n          break;\n        }\n        case 'put': {\n          this.http.put(url, body, { headers })\n            .subscribe((data) => {\n              resolve(data);\n            },\n            (error) => {\n              reject(error);\n              },\n            );\n          break;\n        }\n        case 'delete': {\n          this.http.delete(url, { headers })\n            .subscribe((data) => {\n              resolve(data);\n            },\n            (error) => {\n              reject(error);\n              },\n            );\n          break;\n        }\n        default: {\n           console.log('method not defined');\n           reject('method not defined');\n           break;\n        }\n     }\n\n\n\n      // if(method == 'get'){\n      //   this.http.get(body,this.option)\n      //   .subscribe((data) => {\n      //     resolve(data)\n      //   },\n      //   (error) => {\n      //     reject(error);\n      //   },\n      // );\n      // }else if(method == 'post'){\n\n      // }else if(method == 'put'){\n\n      // }else if(method == 'delete'){\n\n      // }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public loader: any;\n  constructor(\n    public loadingController: LoadingController,\n  ) {\n  }\n\n  async create() {\n    this.loader = await this.loadingController.create({\n      message: 'Please wait...',\n      spinner: 'crescent',\n      duration: 2000\n\n    });\n    return this.loader.present();\n  }\n\n  async dismiss() {\n    this.loader.dismiss();\n  }\n}\n"],"sourceRoot":""}